{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Development\\\\WeatherApplication\\\\client\\\\weather-app\\\\src\\\\components\\\\forecastAPI.js\";\nimport axios from 'axios';\nimport { useState } from 'react';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForecastAPI = () => {\n  const getAPI = name => {\n    const options = {\n      method: 'GET',\n      url: 'http://localhost:3001/forecastAPI',\n      //Backend Pull\n      params: {\n        city: name\n      }\n    };\n    axios.request(options).then(response => {\n      setCity(response.data.cityName);\n      setTemp(response.data.currentTemp + '°C');\n      setCond(response.data.condition);\n      setIcon(response.data.icon);\n      setFeelsLike(response.data.feelslike);\n      setHumidity(response.data.humidity);\n      setWind(response.data.wind);\n      setCountry(response.data.countryName);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: everyChange,\n      placeholder: \"Enter Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ForecastAPI;\nexport default ForecastAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastAPI\");","map":{"version":3,"sources":["C:/Web Development/WeatherApplication/client/weather-app/src/components/forecastAPI.js"],"names":["axios","useState","React","ForecastAPI","getAPI","name","options","method","url","params","city","request","then","response","setCity","data","cityName","setTemp","currentTemp","setCond","condition","setIcon","icon","setFeelsLike","feelslike","setHumidity","humidity","setWind","wind","setCountry","countryName","catch","error","console","handleSubmit","everyChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAEtB,QAAMC,MAAM,GAAIC,IAAD,IAAU;AACrB,UAAMC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,GAAG,EAAE,mCAFO;AAE8B;AAC1CC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAEL;AAAR;AAHI,KAAhB;AAMAL,IAAAA,KAAK,CAACW,OAAN,CAAcL,OAAd,EAAuBM,IAAvB,CAA6BC,QAAD,IAAc;AAEtCC,MAAAA,OAAO,CAACD,QAAQ,CAACE,IAAT,CAAcC,QAAf,CAAP;AACAC,MAAAA,OAAO,CAACJ,QAAQ,CAACE,IAAT,CAAcG,WAAd,GAA4B,IAA7B,CAAP;AACAC,MAAAA,OAAO,CAACN,QAAQ,CAACE,IAAT,CAAcK,SAAf,CAAP;AACAC,MAAAA,OAAO,CAACR,QAAQ,CAACE,IAAT,CAAcO,IAAf,CAAP;AACAC,MAAAA,YAAY,CAACV,QAAQ,CAACE,IAAT,CAAcS,SAAf,CAAZ;AACAC,MAAAA,WAAW,CAACZ,QAAQ,CAACE,IAAT,CAAcW,QAAf,CAAX;AACAC,MAAAA,OAAO,CAACd,QAAQ,CAACE,IAAT,CAAca,IAAf,CAAP;AACAC,MAAAA,UAAU,CAAChB,QAAQ,CAACE,IAAT,CAAce,WAAf,CAAV;AAEH,KAXD,EAWGC,KAXH,CAWUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,KAbD;AAcH,GArBD;;AAuBA,sBACI;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA,2BACQ;AAAO,MAAA,QAAQ,EAAEC,WAAjB;AAA8B,MAAA,WAAW,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA/BD;;KAAMhC,W;AAiCN,eAAeA,WAAf","sourcesContent":["import axios from 'axios'\r\nimport { useState } from 'react';\r\nimport React from 'react';\r\n\r\nconst ForecastAPI = () => {\r\n\r\n    const getAPI = (name) => {\r\n        const options = {\r\n            method: 'GET',\r\n            url: 'http://localhost:3001/forecastAPI', //Backend Pull\r\n            params: { city: name },\r\n        }\r\n\r\n        axios.request(options).then((response) => {\r\n           \r\n            setCity(response.data.cityName)\r\n            setTemp(response.data.currentTemp + '°C')\r\n            setCond(response.data.condition)\r\n            setIcon(response.data.icon)\r\n            setFeelsLike(response.data.feelslike)\r\n            setHumidity(response.data.humidity)\r\n            setWind(response.data.wind)\r\n            setCountry(response.data.countryName)\r\n\r\n        }).catch((error) => {\r\n            console.error(error)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                <input onChange={everyChange} placeholder=\"Enter Location\"></input>\r\n            </form>\r\n    )\r\n\r\n}\r\n\r\nexport default ForecastAPI;\r\n"]},"metadata":{},"sourceType":"module"}