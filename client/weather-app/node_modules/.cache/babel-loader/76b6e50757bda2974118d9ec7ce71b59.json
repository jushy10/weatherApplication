{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Development\\\\WeatherApplication\\\\client\\\\weather-app\\\\src\\\\components\\\\ThreeDayForecast.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Card, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../styles/forecast.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ThreeDayForecast extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.forecastAPI();\n      this.handleInputChange(this.state.cityName);\n      this.setState({\n        isSubmitted: true\n      });\n    };\n\n    this.everyChange = e => {\n      this.setState({\n        cityName: e.target.value\n      });\n      this.setState({\n        isSubmitted: false\n      });\n    };\n\n    this.state = {\n      isSubmitted: false\n    };\n  }\n\n  handleInputChange(cityName) {\n    window.localStorage.setItem('cityName', JSON.stringify(cityName));\n  }\n\n  getDayOfWeek(date) {\n    const dayOfWeek = new Date(date).getDay();\n    return isNaN(dayOfWeek) ? null : ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'][dayOfWeek];\n  }\n\n  async componentDidMount() {\n    if (this.props.cityInput !== null) {\n      await this.setState({\n        cityName: this.props.cityInput\n      });\n      this.forecastAPI();\n    }\n\n    this.setState({\n      isSubmitted: true\n    });\n  }\n\n  async forecastAPI() {\n    const options = {\n      method: 'GET',\n      url: 'http://localhost:3001/forecastAPI',\n      //Backend Pull\n      params: {\n        city: this.state.cityName\n      }\n    };\n    let data = await axios.request(options).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n    this.setState({\n      jsonData: data.forecast.forecastday\n    });\n    this.setState({\n      country: data.location.country\n    });\n    this.setState({\n      region: data.location.region\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app2\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"search\",\n          onSubmit: this.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.everyChange,\n            placeholder: \"Enter Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 4\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [this.state.isSubmitted && /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"cityname\",\n            children: /*#__PURE__*/_jsxDEV(\"center\", {\n              children: [\" \", this.state.cityName, \" \", this.state.region, \", \", this.state.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-example d-flex flex-row flex-nowrap overflow-auto\",\n            children: this.state.jsonData && this.state.jsonData.map(data => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"\\u2003\\u2003\", /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"container\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bottom\",\n                      children: /*#__PURE__*/_jsxDEV(Card, {\n                        border: \"transparent\",\n                        class: \"weatherCard\",\n                        bg: \"transparent\",\n                        text: \"light\",\n                        style: {\n                          width: '25rem',\n                          display: 'flex',\n                          flexDirection: 'column',\n                          border: 'none'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                          class: \"weatherIcon\",\n                          variant: \"top\",\n                          src: data.day.condition.icon\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 96,\n                          columnNumber: 6\n                        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                            class: \"cardTitle\",\n                            children: this.getDayOfWeek(data.date)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 98,\n                            columnNumber: 7\n                          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                            class: \"cardText\",\n                            children: [\"Condition: \", data.day.condition.text]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 99,\n                            columnNumber: 7\n                          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                            class: \"cardText\",\n                            children: [\" Average Temp: \", data.day.avgtemp_c, \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 101,\n                              columnNumber: 7\n                            }, this), \"Max Temp: \", data.day.maxtemp_c, \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 102,\n                              columnNumber: 7\n                            }, this), \"Min Temp: \", data.day.mintemp_c, \"\\xB0C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 103,\n                              columnNumber: 7\n                            }, this), \"Chance of Rain: \", data.day.daily_chance_of_rain, \"%\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 100,\n                            columnNumber: 7\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 97,\n                          columnNumber: 6\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 95,\n                        columnNumber: 5\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 5\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 5\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 5\n                }, this)]\n              }, void 0, true);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default ThreeDayForecast;","map":{"version":3,"sources":["C:/Web Development/WeatherApplication/client/weather-app/src/components/ThreeDayForecast.jsx"],"names":["React","Component","axios","Card","Row","Col","ThreeDayForecast","constructor","handleSubmit","e","preventDefault","forecastAPI","handleInputChange","state","cityName","setState","isSubmitted","everyChange","target","value","window","localStorage","setItem","JSON","stringify","getDayOfWeek","date","dayOfWeek","Date","getDay","isNaN","componentDidMount","props","cityInput","options","method","url","params","city","data","request","then","response","catch","error","console","log","jsonData","forecast","forecastday","country","location","region","render","map","width","display","flexDirection","border","day","condition","icon","text","avgtemp_c","maxtemp_c","mintemp_c","daily_chance_of_rain"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport \"../styles/forecast.css\"\r\n\r\nclass ThreeDayForecast extends Component {\r\nconstructor() {\r\n\tsuper();\r\n\tthis.state = {\r\n\t\tisSubmitted: false,\r\n\t};\r\n}\r\n\r\nhandleInputChange(cityName) {\r\n\twindow.localStorage.setItem('cityName', JSON.stringify(cityName))\r\n}\r\n\r\n\r\n\r\ngetDayOfWeek(date) {\r\n    const dayOfWeek = new Date(date).getDay();\r\n    return isNaN(dayOfWeek) ? null : \r\n      ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'][dayOfWeek];\r\n}\r\n\r\nasync componentDidMount() {\r\n\tif (this.props.cityInput !== null) {\r\n\t\tawait this.setState({ cityName: this.props.cityInput });\r\n\t\tthis.forecastAPI();\r\n\t}\r\n\tthis.setState({isSubmitted: true})\r\n\r\n}\r\n\r\nasync forecastAPI() {\r\n\tconst options = {\r\n\t\tmethod: 'GET',\r\n\t\turl: 'http://localhost:3001/forecastAPI', //Backend Pull\r\n\t\tparams: { city: this.state.cityName },\r\n\t}\r\n\r\n\tlet data = await axios.request(options)\r\n\t.then(function (response) {\r\n\t\treturn response.data;\r\n\t})\r\n\t.catch(function (error) {\r\n\t\tconsole.log(error);\r\n\t});\r\n\tthis.setState({ jsonData: data.forecast.forecastday });\r\n\tthis.setState({ country: data.location.country})\r\n\tthis.setState({ region: data.location.region})\r\n}\r\n\r\nhandleSubmit = (e) => {\r\n\r\n\te.preventDefault();\r\n\tthis.forecastAPI();\r\n\tthis.handleInputChange(this.state.cityName);\r\n\tthis.setState({isSubmitted: true})\r\n\r\n}\r\n\r\neveryChange = (e) => {\r\n\r\n\tthis.setState({ cityName: e.target.value });\r\n\tthis.setState({isSubmitted: false})\r\n}\r\n\r\n\r\nrender() {\r\n\treturn (\r\n\t\t<div className='app2'>\r\n\t\t<>\r\n\t\t<form className=\"search\" onSubmit={this.handleSubmit}>\r\n\t\t\t<input onChange={this.everyChange} placeholder=\"Enter Location\"></input>\r\n\t\t</form> \r\n\r\n\t\t<div>\r\n\r\n\t\t{this.state.isSubmitted &&\r\n\t\t<h2 className=\"cityname\"><center> {this.state.cityName} {this.state.region}, {this.state.country}</center></h2>\r\n\t\t}\r\n\t\t<br></br>\r\n\t\t<Row className=\"card-example d-flex flex-row flex-nowrap overflow-auto\">\r\n\t\t{this.state.jsonData && this.state.jsonData.map(data => {\r\n\t\t\t\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t&emsp;&emsp;\r\n\t\t\t\t<Col>\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t<div className='bottom'>\r\n\t\t\t\t<Card border=\"transparent\" class=\"weatherCard\" bg='transparent' text='light' style={{width: '25rem', display: 'flex', flexDirection: 'column', border: 'none'}}>\r\n\t\t\t\t\t<Card.Img class=\"weatherIcon\" variant=\"top\" src={data.day.condition.icon} />\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Card.Title class=\"cardTitle\">{this.getDayOfWeek(data.date)}</Card.Title>\r\n\t\t\t\t\t\t<Card.Text class=\"cardText\">Condition: {data.day.condition.text}</Card.Text>\r\n\t\t\t\t\t\t<Card.Text class=\"cardText\"> Average Temp: {data.day.avgtemp_c}°C \r\n\t\t\t\t\t\t<br></br>Max Temp: {data.day.maxtemp_c}°C\r\n\t\t\t\t\t\t<br></br>Min Temp: {data.day.mintemp_c}°C\r\n\t\t\t\t\t\t<br></br>Chance of Rain: {data.day.daily_chance_of_rain}%\r\n\r\n\r\n\t\t\t\t\t\t</Card.Text>\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t</Card>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t</>\r\n\r\n\t\t\t);\r\n\t\t\t\r\n\t\t})}\r\n\t\t</Row>\r\n\t\t</div>\r\n\r\n\t</>\r\n\t</div>\r\n\t)\r\n};\r\n}\r\n\r\n\r\nexport default ThreeDayForecast;"]},"metadata":{},"sourceType":"module"}