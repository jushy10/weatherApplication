{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\3230\\\\weatherApplication\\\\client\\\\weather-app\\\\src\\\\components\\\\HourlyForecast.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Card, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../styles/forecast.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass HourlyForecast extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.forecastAPI();\n      this.handleInputChange(this.state.cityName);\n    };\n\n    this.everyChange = e => {\n      this.setState({\n        cityName: e.target.value\n      });\n    };\n\n    this.state = {};\n  }\n\n  getTime(epoch) {\n    var myDate = new Date(epoch * 1000);\n\n    if (myDate.toLocaleString().split(',')[1].length == 11) {\n      return myDate.toLocaleString().split(',')[1].split(' ')[1].slice(0, 4) + myDate.toLocaleString().split(',')[1].split(' ')[2];\n    } else {\n      return myDate.toLocaleString().split(',')[1].split(' ')[1].slice(0, 5) + myDate.toLocaleString().split(',')[1].split(' ')[2];\n    }\n  }\n\n  handleInputChange(cityName) {\n    // this.props.changeCity(input)\n    window.localStorage.setItem('cityName', JSON.stringify(cityName));\n  }\n\n  async componentDidMount() {\n    if (this.props.cityInput !== null) {\n      // console.log(this.props.cityInput)\n      await this.setState({\n        cityName: this.props.cityInput\n      });\n      this.forecastAPI();\n    }\n  }\n\n  getDayOfWeek(date) {\n    const dayOfWeek = new Date(date).getDay();\n    return isNaN(dayOfWeek) ? null : ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'][dayOfWeek];\n  }\n\n  async forecastAPI() {\n    const options = {\n      method: 'GET',\n      url: 'http://localhost:3001/hourlyForecast',\n      //Backend Pull\n      params: {\n        city: this.state.cityName\n      }\n    };\n    let data = await axios.request(options).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n    this.setState({\n      jsonData: data.forecast.forecastday[0].hour\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"search\",\n          onSubmit: this.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.everyChange,\n            placeholder: \"Enter Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 4\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-example d-flex flex-row flex-nowrap overflow-auto\",\n            children: this.state.jsonData && this.state.jsonData.map(data => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      border: \"success\",\n                      class: \"weatherCard\",\n                      bg: \"transparent\",\n                      text: \"light\",\n                      style: {\n                        border: 'none',\n                        width: '40rem',\n                        display: 'flex',\n                        flexDirection: 'column'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                        children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                          class: \"cardText\",\n                          children: [\"Time: \", this.getTime(data.time_epoch), \" \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 99,\n                          columnNumber: 7\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 98,\n                        columnNumber: 6\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 5\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 5\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 5\n                }, this)\n              }, void 0, false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default HourlyForecast;","map":{"version":3,"sources":["D:/School/3230/weatherApplication/client/weather-app/src/components/HourlyForecast.jsx"],"names":["React","Component","axios","Card","Row","Col","HourlyForecast","constructor","handleSubmit","e","preventDefault","forecastAPI","handleInputChange","state","cityName","everyChange","setState","target","value","getTime","epoch","myDate","Date","toLocaleString","split","length","slice","window","localStorage","setItem","JSON","stringify","componentDidMount","props","cityInput","getDayOfWeek","date","dayOfWeek","getDay","isNaN","options","method","url","params","city","data","request","then","response","catch","error","console","log","jsonData","forecast","forecastday","hour","render","map","border","width","display","flexDirection","time_epoch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport { Card, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport \"../styles/forecast.css\"\n\nclass HourlyForecast extends Component {\nconstructor() {\n\tsuper();\n\tthis.state = {\n\t};\n}\n\ngetTime(epoch){\n\tvar myDate = new Date(epoch*1000);\n\tif (myDate.toLocaleString().split(',')[1].length == 11){\n\t\treturn(myDate.toLocaleString().split(',')[1].split(' ')[1].slice(0, 4))+ myDate.toLocaleString().split(',')[1].split(' ')[2];\t\n\t}\n\telse{\n\t\treturn(myDate.toLocaleString().split(',')[1].split(' ')[1].slice(0, 5)) + myDate.toLocaleString().split(',')[1].split(' ')[2];\t\n\t}\n}\n\nhandleInputChange(cityName) {\n    // this.props.changeCity(input)\n\twindow.localStorage.setItem('cityName', JSON.stringify(cityName))\n}\n\n\nasync componentDidMount() {\n\tif (this.props.cityInput !== null) {\n\t\t// console.log(this.props.cityInput)\n\t\tawait this.setState({ cityName: this.props.cityInput });\n\t\tthis.forecastAPI();\n\t}\n\n}\n\ngetDayOfWeek(date) {\n    const dayOfWeek = new Date(date).getDay();\n    return isNaN(dayOfWeek) ? null : \n      ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'][dayOfWeek];\n}\n\nasync forecastAPI() {\n\tconst options = {\n\t\tmethod: 'GET',\n\t\turl: 'http://localhost:3001/hourlyForecast', //Backend Pull\n\t\tparams: { city: this.state.cityName },\n\t}\n\n\tlet data = await axios.request(options)\n\t.then(function (response) {\n\t\treturn response.data;\n\t})\n\t.catch(function (error) {\n\t\tconsole.log(error);\n\t});\n\tthis.setState({ jsonData: data.forecast.forecastday[0].hour });\n}\n\nhandleSubmit = (e) => {\n\n\te.preventDefault();\n\tthis.forecastAPI();\n\tthis.handleInputChange(this.state.cityName);\n\n}\n\neveryChange = (e) => {\n\n\tthis.setState({ cityName: e.target.value });\n}\n\n\nrender() {\n\treturn (\n\t\t<div className='app'>\n\t\t<>\n\t\t<form className='search' onSubmit={this.handleSubmit}>\n\t\t\t<input onChange={this.everyChange} placeholder=\"Enter Location\"></input>\n\t\t</form>\n\n\t\t<div>\n\t\t<br></br><br></br><br></br>\t\n\t\t<Row className=\"card-example d-flex flex-row flex-nowrap overflow-auto\">\n\t\t{this.state.jsonData && this.state.jsonData.map(data => {\n\t\t\t\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\n\t\t\t\t<Col>\n\t\n\t\t\t\t<div className='bottom'>\n\t\t\t\t<Card border=\"success\" class=\"weatherCard\" bg='transparent' text='light' style={{border: 'none', width: '40rem', display: 'flex', flexDirection: 'column'}}>\n\t\t\t\t\t{/* <Card.Img class=\"weatherIcon\" variant=\"top\" src={data.day.condition.icon} /> */}\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Card.Text class=\"cardText\">Time: {this.getTime(data.time_epoch)} </Card.Text>\n\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\n\t\t\t\t</div>\n\t\t\t\t</Col>\n\t\t\t\t</>\n\n\t\t\t);\n\t\t\t\n\t\t})}\n\t\t</Row>\n\t\t</div>\n\n\t</></div>\n\t);\n}\n}\n\nexport default HourlyForecast;"]},"metadata":{},"sourceType":"module"}