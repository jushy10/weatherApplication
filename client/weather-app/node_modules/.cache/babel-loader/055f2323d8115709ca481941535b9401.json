{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Web Development\\\\WeatherApplication\\\\client\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Web Development\\\\WeatherApplication\\\\client\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Web Development\\\\WeatherApplication\\\\client\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Web Development\\\\WeatherApplication\\\\client\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Web Development\\\\WeatherApplication\\\\client\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Web Development\\\\WeatherApplication\\\\client\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Web Development\\\\WeatherApplication\\\\client\\\\weather-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Web Development\\\\WeatherApplication\\\\client\\\\weather-app\\\\src\\\\components\\\\HourlyForecast.jsx\";\nimport React, { Component } from \"react\";\nimport { Chart as ChartJS } from 'chart.js/auto';\nimport { Line } from 'react-chartjs-2';\nimport axios from \"axios\";\nimport { Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../styles/hourlyforecast.css\";\n\nvar HourlyForecast = /*#__PURE__*/function (_Component) {\n  _inherits(HourlyForecast, _Component);\n\n  function HourlyForecast() {\n    var _this;\n\n    _classCallCheck(this, HourlyForecast);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HourlyForecast).call(this));\n\n    _this.handleSubmit = function (e) {\n      var regex = new RegExp(\"^[a-zA-Z\\\\s]+$\");\n\n      _this.setState({\n        hourlyChart: {\n          labels: ['12AM', '1AM', '2AM', '3AM', '4AM', '5AM', '6AM', '7AM', '8AM', '9AM', '10AM', '11AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM', '10PM', '11PM'],\n          datasets: [{\n            fill: false,\n            lineTension: 0.5,\n            backgroundColor: 'white',\n            borderColor: 'black',\n            label: \"Temperature\",\n            data: []\n          }]\n        }\n      });\n\n      _this.setState({\n        humidityChart: {\n          labels: ['12AM', '1AM', '2AM', '3AM', '4AM', '5AM', '6AM', '7AM', '8AM', '9AM', '10AM', '11AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM', '10PM', '11PM'],\n          datasets: [{\n            fill: false,\n            lineTension: 0.5,\n            backgroundColor: 'white',\n            borderColor: 'black',\n            label: \"Humidity\",\n            data: []\n          }]\n        }\n      });\n\n      _this.setState({\n        chanceOfRainChart: {\n          labels: ['12AM', '1AM', '2AM', '3AM', '4AM', '5AM', '6AM', '7AM', '8AM', '9AM', '10AM', '11AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM', '10PM', '11PM'],\n          datasets: [{\n            fill: false,\n            lineTension: 0.5,\n            backgroundColor: 'white',\n            borderColor: 'black',\n            label: \"Chance of Rain\",\n            data: []\n          }]\n        }\n      });\n\n      e.preventDefault();\n\n      if (regex.test(_this.state.city)) {\n        _this.setState({\n          isSubmitted: true\n        });\n\n        _this.forecastAPI();\n\n        _this.handleInputChange(_this.state.city);\n      } else {\n        alert(\"Input Incorrect \\nEx: Toronto\");\n        sessionStorage.clear();\n      }\n    };\n\n    _this.everyChange = function (e) {\n      _this.setState({\n        cityName: e.target.value\n      });\n\n      _this.setState({\n        isSubmitted: false\n      });\n    };\n\n    _this.state = {\n      hourlyChart: {\n        labels: ['12AM', '1AM', '2AM', '3AM', '4AM', '5AM', '6AM', '7AM', '8AM', '9AM', '10AM', '11AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM', '10PM', '11PM'],\n        datasets: [{\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'white',\n          borderColor: 'black',\n          label: \"Temperature\",\n          data: []\n        }]\n      },\n      humidityChart: {\n        labels: ['12AM', '1AM', '2AM', '3AM', '4AM', '5AM', '6AM', '7AM', '8AM', '9AM', '10AM', '11AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM', '10PM', '11PM'],\n        datasets: [{\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'white',\n          borderColor: 'black',\n          label: \"Humidity\",\n          data: []\n        }]\n      },\n      chanceOfRainChart: {\n        labels: ['12AM', '1AM', '2AM', '3AM', '4AM', '5AM', '6AM', '7AM', '8AM', '9AM', '10AM', '11AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM', '10PM', '11PM'],\n        datasets: [{\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'white',\n          borderColor: 'black',\n          label: \"Chance of Rain\",\n          data: []\n        }]\n      },\n      isSubmitted: false\n    };\n    return _this;\n  } //Converting epoch time to EST time\n\n\n  _createClass(HourlyForecast, [{\n    key: \"getTime\",\n    value: function getTime(epoch) {\n      var myDate = new Date(epoch * 1000);\n\n      if (myDate.toLocaleString().split(',')[1].length === 11) {\n        return myDate.toLocaleString().split(',')[1].split(' ')[1].slice(0, 4) + myDate.toLocaleString().split(',')[1].split(' ')[2];\n      } else {\n        return myDate.toLocaleString().split(',')[1].split(' ')[1].slice(0, 5) + myDate.toLocaleString().split(',')[1].split(' ')[2];\n      }\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(cityName) {\n      //Set input to local storage of browser\n      sessionStorage.setItem('cityName', JSON.stringify(cityName));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.props.cityInput !== null)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.setState({\n                  cityName: this.props.cityInput\n                });\n\n              case 3:\n                this.forecastAPI();\n\n              case 4:\n                this.setState({\n                  isSubmitted: true\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"getDayOfWeek\",\n    value: function getDayOfWeek(date) {\n      var dayOfWeek = new Date(date).getDay();\n      return isNaN(dayOfWeek) ? null : ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'][dayOfWeek];\n    }\n  }, {\n    key: \"forecastAPI\",\n    value: function () {\n      var _forecastAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var options, datas;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                options = {\n                  method: 'GET',\n                  url: 'http://localhost:3001/hourlyForecast',\n                  //Backend Pull\n                  params: {\n                    city: this.state.cityName\n                  }\n                };\n                _context2.next = 3;\n                return axios.request(options).then(function (response) {\n                  return response.data;\n                }).catch(function (error) {\n                  console.log(error);\n                });\n\n              case 3:\n                datas = _context2.sent;\n                //States for Cards\n                this.setState({\n                  jsonData: datas.forecast.forecastday[0].hour.slice(0, 12)\n                });\n                this.setState({\n                  jsonData2: datas.forecast.forecastday[0].hour.slice(12, 24)\n                }); //States for Graph\n\n                if (datas) {\n                  datas.forecast.forecastday[0].hour.map(function (info) {\n                    return _this2.state.hourlyChart.datasets[0].data.push(info.temp_c);\n                  });\n                  datas.forecast.forecastday[0].hour.map(function (info) {\n                    return _this2.state.humidityChart.datasets[0].data.push(info.humidity);\n                  });\n                  datas.forecast.forecastday[0].hour.map(function (info) {\n                    return _this2.state.chanceOfRainChart.datasets[0].data.push(info.chance_of_rain);\n                  });\n                }\n\n                this.setState({\n                  country: datas.location.country\n                });\n                this.setState({\n                  region: datas.location.region\n                });\n                this.setState({\n                  cities: datas.location.name\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function forecastAPI() {\n        return _forecastAPI.apply(this, arguments);\n      }\n\n      return forecastAPI;\n    }() //Enter Key\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"hourlyforecast\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n        className: \"search\",\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.everyChange,\n        placeholder: \"Enter Location\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 4\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 3\n        }\n      }, this.state.isSubmitted && this.state.cityName !== '' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"cityname\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 28\n        }\n      }, \" \", this.state.cities, \" \", this.state.region, \", \", this.state.country))), /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 3\n        }\n      }, \"All Times Relative to EST\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 3\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 12\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        className: \"card-example d-flex flex-row flex-nowrap overflow-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 3\n        }\n      }, this.state.jsonData && this.state.jsonData.map(function (data) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"bottomHour\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          className: \"weatherTime\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 8\n          }\n        }, _this3.getTime(data.time_epoch)), /*#__PURE__*/React.createElement(\"img\", {\n          alt: \"\",\n          src: data.condition.icon,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 5\n          }\n        }), data.temp_c, \"\\xB0C\")));\n      })), /*#__PURE__*/React.createElement(Row, {\n        className: \"card-example d-flex flex-row flex-nowrap overflow-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 3\n        }\n      }, this.state.jsonData2 && this.state.jsonData2.map(function (data2) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"bottomHour\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          className: \"weatherTime\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 8\n          }\n        }, _this3.getTime(data2.time_epoch)), /*#__PURE__*/React.createElement(\"img\", {\n          alt: \"\",\n          src: data2.condition.icon,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 5\n          }\n        }), data2.temp_c, \"\\xB0C\"))));\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 3\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 12\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chartBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: \"relative\",\n          margin: \"auto\",\n          width: \"1250px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 3\n        }\n      }, \"Hourly Temperature\"), /*#__PURE__*/React.createElement(Line, {\n        className: \"lineChart\",\n        data: this.state.hourlyChart,\n        options: {\n          scales: {\n            y: {\n              ticks: {\n                color: \"white\",\n                font: {\n                  size: 18\n                },\n                stepSize: 1,\n                beginAtZero: true,\n                callback: function callback(value) {\n                  return value + \"°C\";\n                }\n              }\n            },\n            x: {\n              ticks: {\n                color: \"white\",\n                font: {\n                  size: 15\n                },\n                stepSize: 1\n              }\n            }\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 3\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chartBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: \"relative\",\n          margin: \"auto\",\n          width: \"1250px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 3\n        }\n      }, \"Hourly Humidity Levels\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 3\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        className: \"lineChart\",\n        data: this.state.humidityChart,\n        options: {\n          scales: {\n            y: {\n              suggestedMin: 0,\n              suggestedMax: 100,\n              ticks: {\n                color: \"white\",\n                font: {\n                  size: 18\n                },\n                stepSize: 1,\n                beginAtZero: true,\n                callback: function callback(value) {\n                  return value + \"%\";\n                }\n              }\n            },\n            x: {\n              ticks: {\n                color: \"white\",\n                font: {\n                  size: 15\n                },\n                stepSize: 1\n              }\n            }\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 3\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chartBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: \"relative\",\n          margin: \"auto\",\n          width: \"1250px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 3\n        }\n      }, \"Hourly Chance of Rain\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 3\n        }\n      }), /*#__PURE__*/React.createElement(Line, {\n        className: \"lineChart\",\n        data: this.state.chanceOfRainChart,\n        options: {\n          scales: {\n            y: {\n              suggestedMin: 0,\n              suggestedMax: 100,\n              ticks: {\n                color: \"white\",\n                font: {\n                  size: 18\n                },\n                stepSize: 1,\n                beginAtZero: true,\n                callback: function callback(value) {\n                  return value + \"%\";\n                }\n              }\n            },\n            x: {\n              ticks: {\n                color: \"white\",\n                font: {\n                  size: 15\n                },\n                stepSize: 1\n              }\n            }\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 3\n        }\n      }))))));\n    }\n  }]);\n\n  return HourlyForecast;\n}(Component);\n\nexport default HourlyForecast;","map":{"version":3,"sources":["C:/Web Development/WeatherApplication/client/weather-app/src/components/HourlyForecast.jsx"],"names":["React","Component","Chart","ChartJS","Line","axios","Row","Col","HourlyForecast","handleSubmit","e","regex","RegExp","setState","hourlyChart","labels","datasets","fill","lineTension","backgroundColor","borderColor","label","data","humidityChart","chanceOfRainChart","preventDefault","test","state","city","isSubmitted","forecastAPI","handleInputChange","alert","sessionStorage","clear","everyChange","cityName","target","value","epoch","myDate","Date","toLocaleString","split","length","slice","setItem","JSON","stringify","props","cityInput","date","dayOfWeek","getDay","isNaN","options","method","url","params","request","then","response","catch","error","console","log","datas","jsonData","forecast","forecastday","hour","jsonData2","map","info","push","temp_c","humidity","chance_of_rain","country","location","region","cities","name","getTime","time_epoch","condition","icon","data2","position","margin","width","scales","y","ticks","color","font","size","stepSize","beginAtZero","callback","x","suggestedMin","suggestedMax"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Chart as ChartJS } from 'chart.js/auto'\r\nimport { Line } from 'react-chartjs-2'\r\nimport axios from \"axios\";\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport \"../styles/hourlyforecast.css\"\r\n\r\nclass HourlyForecast extends Component {\r\nconstructor() {\r\n\tsuper();\r\n\tthis.state = {\r\n\t\thourlyChart: {\r\n\t\t\tlabels: ['12AM', '1AM', '2AM', '3AM', '4AM', '5AM', '6AM', '7AM', '8AM', '9AM', '10AM', '11AM'\r\n\t\t\t, '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM', '10PM', '11PM'],\r\n\t\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tfill: false,\r\n\t\t\t\tlineTension: 0.5,\r\n\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\tborderColor: 'black',\r\n\t\t\t\tlabel: \"Temperature\",\r\n\t\t\t\tdata: [],\r\n\t\t\t}]\r\n\t\t},\r\n\t\thumidityChart: {\r\n\t\t\tlabels: ['12AM', '1AM', '2AM', '3AM', '4AM', '5AM', '6AM', '7AM', '8AM', '9AM', '10AM', '11AM'\r\n\t\t\t, '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM', '10PM', '11PM'],\r\n\t\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tfill: false,\r\n\t\t\t\tlineTension: 0.5,\r\n\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\tborderColor: 'black',\r\n\t\t\t\tlabel: \"Humidity\",\r\n\t\t\t\tdata: [],\r\n\t\t\t}]\r\n\t\t},\r\n\t\tchanceOfRainChart: {\r\n\t\t\tlabels: ['12AM', '1AM', '2AM', '3AM', '4AM', '5AM', '6AM', '7AM', '8AM', '9AM', '10AM', '11AM'\r\n\t\t\t, '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM', '10PM', '11PM'],\r\n\t\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tfill: false,\r\n\t\t\t\tlineTension: 0.5,\r\n\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\tborderColor: 'black',\r\n\t\t\t\tlabel: \"Chance of Rain\",\r\n\t\t\t\tdata: [],\r\n\t\t\t}]\r\n\t\t},\r\n\t\tisSubmitted: false,\r\n\t};\r\n\r\n}\r\n\r\n//Converting epoch time to EST time\r\ngetTime(epoch){\r\n\tvar myDate = new Date(epoch*1000);\r\n\tif (myDate.toLocaleString().split(',')[1].length === 11){\r\n\t\treturn(myDate.toLocaleString().split(',')[1].split(' ')[1].slice(0, 4)) + myDate.toLocaleString().split(',')[1].split(' ')[2];\t\r\n\t}\r\n\telse {\r\n\t\treturn(myDate.toLocaleString().split(',')[1].split(' ')[1].slice(0, 5)) + myDate.toLocaleString().split(',')[1].split(' ')[2];\t\r\n\t}\r\n}\r\n\r\nhandleInputChange(cityName) {\r\n    //Set input to local storage of browser\r\n\tsessionStorage.setItem('cityName', JSON.stringify(cityName))\r\n}\r\n\r\n\r\nasync componentDidMount() {\r\n\tif (this.props.cityInput !== null) {\r\n\t\tawait this.setState({ cityName: this.props.cityInput });\r\n\t\tthis.forecastAPI();\r\n\t}\r\n\tthis.setState({isSubmitted: true})\r\n\r\n}\r\n\r\ngetDayOfWeek(date) {\r\n    const dayOfWeek = new Date(date).getDay();\r\n    return isNaN(dayOfWeek) ? null : \r\n      ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'][dayOfWeek];\r\n}\r\n\r\nasync forecastAPI() {\r\n\tconst options = {\r\n\t\tmethod: 'GET',\r\n\t\turl: 'http://localhost:3001/hourlyForecast', //Backend Pull\r\n\t\tparams: { city: this.state.cityName },\r\n\t}\r\n\r\n\tlet datas = await axios.request(options)\r\n\t.then(function (response) {\r\n\t\treturn response.data;\r\n\t})\r\n\t.catch(function (error) {\r\n\t\tconsole.log(error);\r\n\t});\r\n\r\n\r\n\r\n\t//States for Cards\r\n\tthis.setState({ jsonData: datas.forecast.forecastday[0].hour.slice(0, 12) })\r\n\tthis.setState({ jsonData2: datas.forecast.forecastday[0].hour.slice(12, 24) })\r\n\r\n\r\n\t//States for Graph\r\n\tif (datas) {\r\n\t\tdatas.forecast.forecastday[0].hour.map(info => \r\n\t\t\tthis.state.hourlyChart.datasets[0].data.push(info.temp_c) \r\n\t\t);\r\n\t\tdatas.forecast.forecastday[0].hour.map(info => \r\n\t\t\tthis.state.humidityChart.datasets[0].data.push(info.humidity)\t\t\t\t\r\n\t\t);\r\n\t\tdatas.forecast.forecastday[0].hour.map(info => \r\n\t\t\tthis.state.chanceOfRainChart.datasets[0].data.push(info.chance_of_rain)\t\t\t\t\r\n\t\t);\r\n\t}\r\n\tthis.setState({ country: datas.location.country})\r\n\tthis.setState({ region: datas.location.region})\r\n\tthis.setState({ cities: datas.location.name})\r\n\r\n}\r\n\r\n\r\n//Enter Key\r\nhandleSubmit = (e) => {\r\n\tconst regex = new RegExp(`^[a-zA-Z\\\\s]+$`);\r\n\tthis.setState({\r\n\t\thourlyChart: {\r\n\t\t\tlabels: ['12AM', '1AM', '2AM', '3AM', '4AM', '5AM', '6AM', '7AM', '8AM', '9AM', '10AM', '11AM'\r\n\t\t\t, '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM', '10PM', '11PM'],\r\n\t\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tfill: false,\r\n\t\t\t\tlineTension: 0.5,\r\n\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\tborderColor: 'black',\r\n\t\t\t\tlabel: \"Temperature\",\r\n\t\t\t\tdata: [],\r\n\t\t\t}]\r\n\t}});\r\n\r\n\tthis.setState({\r\n\t\thumidityChart: {\r\n\t\t\tlabels: ['12AM', '1AM', '2AM', '3AM', '4AM', '5AM', '6AM', '7AM', '8AM', '9AM', '10AM', '11AM'\r\n\t\t\t, '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM', '10PM', '11PM'],\r\n\t\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tfill: false,\r\n\t\t\t\tlineTension: 0.5,\r\n\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\tborderColor: 'black',\r\n\t\t\t\tlabel: \"Humidity\",\r\n\t\t\t\tdata: [],\r\n\t\t\t}]\r\n\t}});\r\n\r\n\tthis.setState({\r\n\t\tchanceOfRainChart: {\r\n\t\t\tlabels: ['12AM', '1AM', '2AM', '3AM', '4AM', '5AM', '6AM', '7AM', '8AM', '9AM', '10AM', '11AM'\r\n\t\t\t, '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM', '10PM', '11PM'],\r\n\t\t\tdatasets: [\r\n\t\t\t{\r\n\t\t\t\tfill: false,\r\n\t\t\t\tlineTension: 0.5,\r\n\t\t\t\tbackgroundColor: 'white',\r\n\t\t\t\tborderColor: 'black',\r\n\t\t\t\tlabel: \"Chance of Rain\",\r\n\t\t\t\tdata: [],\r\n\t\t\t}]\r\n\t}});\r\n\r\n\te.preventDefault();\r\n    if (regex.test(this.state.city)) {\r\n        this.setState({isSubmitted: true})\r\n        this.forecastAPI();\r\n        this.handleInputChange(this.state.city);\r\n    }\r\n    else {\r\n        alert(\"Input Incorrect \\nEx: Toronto\");\r\n\t\tsessionStorage.clear();\r\n    }\r\n\t\r\n}\r\n\r\neveryChange = (e) => {\r\n\tthis.setState({ cityName: e.target.value });\r\n\tthis.setState({isSubmitted: false})\r\n}\r\n\r\n\r\nrender() {\r\n\treturn (\r\n\t\t<div className='hourlyforecast'>\r\n\t\t<>\r\n\t\t<form className='search' onSubmit={this.handleSubmit}>\r\n\t\t\t<input onChange={this.everyChange} placeholder=\"Enter Location\"></input>\r\n\t\t</form>\r\n\r\n\t\t<div>\r\n\r\n\t\t{this.state.isSubmitted && this.state.cityName !== '' &&\r\n\t\t<>\r\n\t\t<h2 className=\"cityname\"><center> {this.state.cities} {this.state.region}, {this.state.country}</center></h2>\r\n\t\t</>\r\n\t\t}\r\n\t\t<center>All Times Relative to EST</center>\r\n\t\t<br></br><br></br>\r\n\r\n\t\t\r\n\t\t<Row className=\"card-example d-flex flex-row flex-nowrap overflow-auto\">\r\n\t\t{this.state.jsonData && this.state.jsonData.map(data=> {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\r\n\t\t\t\t<div className='bottomHour'>\r\n\t\t\t\t<p><b className=\"weatherTime\">{this.getTime(data.time_epoch)}</b>\r\n\t\t\t\r\n\t\t\t\t<img alt=\"\" src={data.condition.icon}></img>\r\n\t\t\t\t{data.temp_c}°C</p>\r\n\t\t\t\r\n\t\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t</>\r\n\t\t\t\t\r\n\t\t\t);\r\n\t\t})}\r\n\t\t</Row>\r\n\t\t\r\n\t\t<Row className=\"card-example d-flex flex-row flex-nowrap overflow-auto\">\r\n\t\t{this.state.jsonData2 && this.state.jsonData2.map(data2=> {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t<Col>\r\n\t\t\t\t<div className='bottomHour'>\r\n\t\t\t\r\n\t\t\t\t<p><b className=\"weatherTime\">{this.getTime(data2.time_epoch)}</b>\r\n\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t<img alt=\"\" src={data2.condition.icon}></img>\r\n\t\t\t\t{data2.temp_c}°C</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t</Col>\r\n\t\t\t\t\r\n\t\t\t\t</>\r\n\t\t\t\t\r\n\t\t\t);\r\n\t\t})}\r\n\t\t</Row>\r\n\t\t<br></br><br></br>\r\n\r\n\t\t<div className='chartBox'>\r\n\t\t<div style={{ position: \"relative\", margin: \"auto\", width: \"1250px\" }}>\r\n\r\n\t\t<h1>Hourly Temperature</h1>\r\n\t\t<Line className=\"lineChart\" data={this.state.hourlyChart} \r\n\t\t\toptions={\r\n\t\t\t{scales: {\r\n\t\t\t\ty: {  \r\n\t\t\t\t  ticks: {\r\n\t\t\t\t\tcolor: \"white\", \r\n\t\t\t\t\tfont: {\r\n\t\t\t\t\t  size: 18, \r\n\t\t\t\t\t},\r\n\t\t\t\t\tstepSize: 1,\r\n\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\tcallback: function(value) {\r\n                        return value + \"°C\"\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t\t},\r\n\t\t\t\tx: {  \r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t  color: \"white\", \r\n\t\t\t\t\t  font: {\r\n\t\t\t\t\t\tsize: 15, \r\n\t\t\t\t\t  },\r\n\t\t\t\t\t  stepSize: 1,\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t />\r\n\r\n\r\n\r\n\t\t\t \r\n\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div className='chartBox'>\r\n\t\t<div style={{ position: \"relative\", margin: \"auto\", width: \"1250px\" }}>\r\n\t\t\r\n\t\t<h1>Hourly Humidity Levels</h1>\r\n\t\t<br></br>\r\n\t\t<Line className=\"lineChart\" data={this.state.humidityChart} \r\n\t\t\toptions={\r\n\t\t\t{scales: {\r\n\t\t\t\ty: {  \r\n\t\t\t\t\tsuggestedMin: 0,\r\n                \tsuggestedMax: 100,\r\n\t\t\t\t  ticks: {\r\n\t\t\t\t\tcolor: \"white\", \r\n\t\t\t\t\tfont: {\r\n\t\t\t\t\t  size: 18, \r\n\t\t\t\t\t},\r\n\t\t\t\t\tstepSize: 1,\r\n\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\tcallback: function(value) {\r\n                        return value + \"%\"\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t\t},\r\n\t\t\t\tx: {  \r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t  color: \"white\", \r\n\t\t\t\t\t  font: {\r\n\t\t\t\t\t\tsize: 15, \r\n\t\t\t\t\t  },\r\n\t\t\t\t\t  stepSize: 1,\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t />\r\n\t\t\t </div>\r\n\r\n\t\t</div>\r\n\r\n\t\t<div className='chartBox'>\r\n\t\t<div style={{ position: \"relative\", margin: \"auto\", width: \"1250px\" }}>\r\n\t\t\r\n\t\t<h1>Hourly Chance of Rain</h1>\r\n\t\t<br></br>\r\n\t\t<Line className=\"lineChart\" data={this.state.chanceOfRainChart} \r\n\t\t\toptions={\r\n\t\t\t{scales: {\r\n\t\t\t\ty: {  \r\n\t\t\t\t\tsuggestedMin: 0,\r\n                \tsuggestedMax: 100,\r\n\t\t\t\t  ticks: {\r\n\t\t\t\t\tcolor: \"white\", \r\n\t\t\t\t\tfont: {\r\n\t\t\t\t\t  size: 18, \r\n\t\t\t\t\t},\r\n\t\t\t\t\tstepSize: 1,\r\n\t\t\t\t\tbeginAtZero: true,\r\n\t\t\t\t\tcallback: function(value) {\r\n                        return value + \"%\"\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t\t},\r\n\t\t\t\tx: {  \r\n\t\t\t\t\tticks: {\r\n\t\t\t\t\t  color: \"white\", \r\n\t\t\t\t\t  font: {\r\n\t\t\t\t\t\tsize: 15, \r\n\t\t\t\t\t  },\r\n\t\t\t\t\t  stepSize: 1,\r\n\t\t\t\t\t}\r\n\t\t\t\t  }\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t />\r\n\t\t\t </div>\r\n\r\n\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\r\n\t</></div>\r\n\t);\r\n}\r\n}\r\n\r\n\r\nexport default HourlyForecast;"]},"metadata":{},"sourceType":"module"}