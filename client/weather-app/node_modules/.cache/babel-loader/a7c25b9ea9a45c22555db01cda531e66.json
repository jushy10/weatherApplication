{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Development\\\\WeatherApplication\\\\client\\\\weather-app\\\\src\\\\components\\\\forecastAPI.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useState } from 'react';\nimport React from 'react';\nimport { Text } from 'react-native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ForecastAPI = () => {\n  _s();\n\n  const [cityInput, setCityInput] = useState('');\n  const [maxTemp, setMaxTemp] = useState('');\n  const [minTemp, setMinTemp] = useState('');\n  const [avgTemp, setAvgTemp] = useState('');\n  const [condition, setCondition] = useState('');\n  const [conditionIcon, setConditionIcon] = useState('');\n  const [chanceOfRain, setChanceOfRain] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    getAPI(cityInput);\n  };\n\n  const everyChange = e => {\n    setCityInput(e.target.value);\n  };\n\n  const printOut = () => {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  };\n\n  const getAPI = cityInput => {\n    const options = {\n      method: 'GET',\n      url: 'http://localhost:3001/forecastAPI',\n      //Backend Pull\n      params: {\n        city: cityInput\n      }\n    };\n    axios.request(options).then(response => {\n      for (let i = 0; i < 3; i++) {\n        console.log(response.data.forecast[i]);\n        printOut();\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: everyChange,\n        placeholder: \"Enter Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: [\"Hello, I am \", getFullName(\"Rum\", \"Tum\", \"Tugger\"), \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ForecastAPI, \"p0AqIcbK0gugb5HPAeko8AjxVEY=\");\n\n_c = ForecastAPI;\nexport default ForecastAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastAPI\");","map":{"version":3,"sources":["C:/Web Development/WeatherApplication/client/weather-app/src/components/forecastAPI.js"],"names":["axios","useState","React","Text","ForecastAPI","cityInput","setCityInput","maxTemp","setMaxTemp","minTemp","setMinTemp","avgTemp","setAvgTemp","condition","setCondition","conditionIcon","setConditionIcon","chanceOfRain","setChanceOfRain","handleSubmit","e","preventDefault","getAPI","everyChange","target","value","printOut","options","method","url","params","city","request","then","response","i","console","log","data","forecast","catch","error","getFullName"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,cAArB;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,EAAD,CAAhD;;AAGA,QAAMkB,YAAY,GAAIC,CAAD,IAAO;AAExBA,IAAAA,CAAC,CAACC,cAAF;AAEAC,IAAAA,MAAM,CAACjB,SAAD,CAAN;AACH,GALD;;AAOA,QAAMkB,WAAW,GAAIH,CAAD,IAAO;AAEvBd,IAAAA,YAAY,CAACc,CAAC,CAACI,MAAF,CAASC,KAAV,CAAZ;AACH,GAHD;;AAMA,QAAMC,QAAQ,GAAG,MAAM;AACnB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH,GALD;;AAOA,QAAMJ,MAAM,GAAIjB,SAAD,IAAe;AAC1B,UAAMsB,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,GAAG,EAAE,mCAFO;AAE8B;AAC1CC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE1B;AAAR;AAHI,KAAhB;AAMAL,IAAAA,KAAK,CAACgC,OAAN,CAAcL,OAAd,EAAuBM,IAAvB,CAA6BC,QAAD,IAAc;AACtC,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,QAAd,CAAuBJ,CAAvB,CAAZ;AACAT,QAAAA,QAAQ;AAOX;AAEJ,KAZD,EAYGc,KAZH,CAYUC,KAAD,IAAW;AAChBL,MAAAA,OAAO,CAACK,KAAR,CAAcA,KAAd;AACH,KAdD;AAeH,GAtBD;;AAyBA,sBACI;AAAA,4BACA;AAAM,MAAA,QAAQ,EAAEtB,YAAhB;AAAA,6BACI;AAAO,QAAA,QAAQ,EAAEI,WAAjB;AAA8B,QAAA,WAAW,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAIA,QAAC,IAAD;AAAA,iCACiBmB,WAAW,CAAC,KAAD,EAAQ,KAAR,EAAe,QAAf,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA,kBADJ;AAYH,CA1ED;;GAAMtC,W;;KAAAA,W;AA4EN,eAAeA,WAAf","sourcesContent":["import axios from 'axios'\r\nimport { useState } from 'react';\r\nimport React from 'react';\r\n\r\nimport { Text } from 'react-native';\r\n\r\nconst ForecastAPI = () => {\r\n\r\n    const [cityInput, setCityInput] = useState('');\r\n\r\n    const [maxTemp, setMaxTemp] = useState('');\r\n    \r\n    const [minTemp, setMinTemp] = useState('');\r\n\r\n    const [avgTemp, setAvgTemp] = useState('');\r\n\r\n    const [condition, setCondition] = useState('');\r\n\r\n    const [conditionIcon, setConditionIcon] = useState('');\r\n\r\n    const [chanceOfRain, setChanceOfRain] = useState('');\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        getAPI(cityInput);\r\n    }\r\n\r\n    const everyChange = (e) => {\r\n\r\n        setCityInput(e.target.value)\r\n    }\r\n\r\n\r\n    const printOut = () => {\r\n        return (\r\n            <h1>Hello</h1>\r\n        );\r\n\r\n    }\r\n\r\n    const getAPI = (cityInput) => {\r\n        const options = {\r\n            method: 'GET',\r\n            url: 'http://localhost:3001/forecastAPI', //Backend Pull\r\n            params: { city: cityInput },\r\n        }\r\n\r\n        axios.request(options).then((response) => {\r\n            for (let i = 0; i < 3; i++) {\r\n                console.log(response.data.forecast[i]);\r\n                printOut();\r\n\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(error)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit}>\r\n            <input onChange={everyChange} placeholder=\"Enter Location\"></input>\r\n        </form>\r\n        <Text>\r\n            Hello, I am {getFullName(\"Rum\", \"Tum\", \"Tugger\")}!\r\n        </Text>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ForecastAPI;\r\n"]},"metadata":{},"sourceType":"module"}