{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Development\\\\WeatherApplication\\\\client\\\\weather-app\\\\src\\\\components\\\\hello.js\",\n    _s = $RefreshSig$();\n\nimport { json } from 'express/lib/response';\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Hello = () => {\n  _s();\n\n  const [initialState, setInitialState] = useState([]);\n  useEffect(() => {\n    fetch('/api/').then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(jsonResponse => console.log(jsonResponse));\n  }, []);\n  console.log(initialState);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Hello, \"TPkV8udiJGPETdsNUbDCfm35kiU=\");\n\n_c = Hello;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hello\");","map":{"version":3,"sources":["C:/Web Development/WeatherApplication/client/weather-app/src/components/hello.js"],"names":["json","React","useEffect","useState","Hello","initialState","setInitialState","fetch","then","res","ok","jsonResponse","console","log"],"mappings":";;;AAAA,SAASA,IAAT,QAAqB,sBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,EAAD,CAAhD;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,KAAK,CAAC,OAAD,CAAL,CAAeC,IAAf,CAAoBC,GAAG,IAAI;AACvB,UAAIA,GAAG,CAACC,EAAR,EAAY;AACR,eAAOD,GAAG,CAACT,IAAJ,EAAP;AACH;AACJ,KAJD,EAIGQ,IAJH,CAIQG,YAAY,IAAIC,OAAO,CAACC,GAAR,CAAYF,YAAZ,CAJxB;AAKH,GANQ,EAMN,EANM,CAAT;AAOAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,YAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH,CAjBM;;GAAMD,K;;KAAAA,K","sourcesContent":["import { json } from 'express/lib/response'\r\nimport React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\n\r\n\r\nexport const Hello = () => {\r\n\r\n    const [initialState, setInitialState] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('/api/').then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }   \r\n        }).then(jsonResponse => console.log(jsonResponse))\r\n    }, [])\r\n    console.log(initialState);\r\n    return (\r\n        <div>Hello</div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}