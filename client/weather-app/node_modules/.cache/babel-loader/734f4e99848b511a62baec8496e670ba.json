{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Development\\\\WeatherApplication\\\\client\\\\weather-app\\\\src\\\\components\\\\ForecastAPI.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Card, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ForecastAPI extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.forecastAPI();\n    };\n\n    this.everyChange = e => {\n      this.setState({\n        cityName: e.target.value\n      });\n    };\n\n    this.state = {};\n  }\n\n  async forecastAPI() {\n    const options = {\n      method: 'GET',\n      url: 'http://localhost:3001/forecastAPI',\n      //Backend Pull\n      params: {\n        city: this.state.cityName\n      }\n    };\n    let data = await axios.request(options).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n    this.setState({\n      jsonData: data.forecast.forecastday\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.everyChange,\n          placeholder: \"Enter Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.jsonData && this.state.jsonData.map(data => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                width: '18rem',\n                display: 'flex',\n                flexDirection: 'row'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: data.day.condition.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 6\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: data.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [\"Average Temp: \", data.day.avgtemp_c]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 6\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 5\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default ForecastAPI;","map":{"version":3,"sources":["C:/Web Development/WeatherApplication/client/weather-app/src/components/ForecastAPI.jsx"],"names":["React","Component","axios","Card","Button","ForecastAPI","constructor","handleSubmit","e","preventDefault","forecastAPI","everyChange","setState","cityName","target","value","state","options","method","url","params","city","data","request","then","response","catch","error","console","log","jsonData","forecast","forecastday","render","map","width","display","flexDirection","day","condition","icon","date","avgtemp_c"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,OAAO,sCAAP;;;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AACpCK,EAAAA,WAAW,GAAG;AACb;;AADa,SAuBdC,YAvBc,GAuBEC,CAAD,IAAO;AAErBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,WAAL;AAEA,KA5Ba;;AAAA,SA8BdC,WA9Bc,GA8BCH,CAAD,IAAO;AAEpB,WAAKI,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEL,CAAC,CAACM,MAAF,CAASC;AAArB,OAAd;AACA,KAjCa;;AAEb,SAAKC,KAAL,GAAa,EAAb;AAEA;;AAEgB,QAAXN,WAAW,GAAG;AACnB,UAAMO,OAAO,GAAG;AACfC,MAAAA,MAAM,EAAE,KADO;AAEfC,MAAAA,GAAG,EAAE,mCAFU;AAE2B;AAC1CC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE,KAAKL,KAAL,CAAWH;AAAnB;AAHO,KAAhB;AAMA,QAAIS,IAAI,GAAG,MAAMpB,KAAK,CAACqB,OAAN,CAAcN,OAAd,EAChBO,IADgB,CACX,UAAUC,QAAV,EAAoB;AACzB,aAAOA,QAAQ,CAACH,IAAhB;AACA,KAHgB,EAIhBI,KAJgB,CAIV,UAAUC,KAAV,EAAiB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,KANgB,CAAjB;AAOA,SAAKf,QAAL,CAAc;AAAEkB,MAAAA,QAAQ,EAAER,IAAI,CAACS,QAAL,CAAcC;AAA1B,KAAd;AACA;;AAeDC,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA,8BACA;AAAM,QAAA,QAAQ,EAAE,KAAK1B,YAArB;AAAA,+BACC;AAAO,UAAA,QAAQ,EAAE,KAAKI,WAAtB;AAAmC,UAAA,WAAW,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADA,eAKA;AAAA,kBACC,KAAKK,KAAL,CAAWc,QAAX,IAAuB,KAAKd,KAAL,CAAWc,QAAX,CAAoBI,GAApB,CAAwBZ,IAAI,IAAI;AACvD,8BACC;AAAA,mCACA,QAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEa,gBAAAA,KAAK,EAAE,OAAT;AAAkBC,gBAAAA,OAAO,EAAE,MAA3B;AAAmCC,gBAAAA,aAAa,EAAE;AAAlD,eAAb;AAAA,sCACC,QAAC,IAAD,CAAM,GAAN;AAAU,gBAAA,OAAO,EAAC,KAAlB;AAAwB,gBAAA,GAAG,EAAEf,IAAI,CAACgB,GAAL,CAASC,SAAT,CAAmBC;AAAhD;AAAA;AAAA;AAAA;AAAA,sBADD,eAEC,QAAC,IAAD,CAAM,IAAN;AAAA,wCACC,QAAC,IAAD,CAAM,KAAN;AAAA,4BAAalB,IAAI,CAACmB;AAAlB;AAAA;AAAA;AAAA;AAAA,wBADD,eAEC,QAAC,IAAD,CAAM,IAAN;AAAA,+CAA0BnB,IAAI,CAACgB,GAAL,CAASI,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,2BADD;AAgBA,SAjBuB;AADxB;AAAA;AAAA;AAAA;AAAA,cALA;AAAA,oBADD;AA6BA;;AAnEmC;;AAsEpC,eAAerC,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nclass ForecastAPI extends Component {\r\nconstructor() {\r\n\tsuper();\r\n\tthis.state = {\r\n\t};\r\n}\r\n\r\nasync forecastAPI() {\r\n\tconst options = {\r\n\t\tmethod: 'GET',\r\n\t\turl: 'http://localhost:3001/forecastAPI', //Backend Pull\r\n\t\tparams: { city: this.state.cityName },\r\n\t}\r\n\r\n\tlet data = await axios.request(options)\r\n\t.then(function (response) {\r\n\t\treturn response.data;\r\n\t})\r\n\t.catch(function (error) {\r\n\t\tconsole.log(error);\r\n\t});\r\n\tthis.setState({ jsonData: data.forecast.forecastday });\r\n}\r\n\r\nhandleSubmit = (e) => {\r\n\r\n\te.preventDefault();\r\n\tthis.forecastAPI();\r\n\r\n}\r\n\r\neveryChange = (e) => {\r\n\r\n\tthis.setState({ cityName: e.target.value });\r\n}\r\n\r\n\r\nrender() {\r\n\treturn (\r\n\t\t<>\r\n\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t<input onChange={this.everyChange} placeholder=\"Enter Location\"></input>\r\n\t\t</form>\r\n\r\n\t\t<div>\r\n\t\t{this.state.jsonData && this.state.jsonData.map(data => {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t<Card style={{ width: '18rem', display: 'flex', flexDirection: 'row' }}>\r\n\t\t\t\t\t<Card.Img variant=\"top\" src={data.day.condition.icon} />\r\n\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t<Card.Title>{data.date}</Card.Title>\r\n\t\t\t\t\t\t<Card.Text>Average Temp: {data.day.avgtemp_c}</Card.Text>\r\n\t\t\t\t\t\t{/* <Button variant=\"primary\">Go somewhere</Button> */}\r\n\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t\r\n\t\t\t\t</>\r\n\r\n\r\n\r\n\t\t\t);\r\n\t\t})}\r\n\t\t</div>\r\n\r\n\t</>\r\n\t);\r\n}\r\n}\r\n\r\nexport default ForecastAPI;"]},"metadata":{},"sourceType":"module"}