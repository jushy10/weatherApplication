{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Development\\\\WeatherApplication\\\\client\\\\weather-app\\\\src\\\\components\\\\classTest.js\";\nimport React, { useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class ForecastTest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.getAPI();\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Testing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.everyChange = e => {\n      //Setting cityInput\n      this.setState({\n        cityInput: e.target.value\n      });\n    };\n\n    this.state = {\n      maxTemp: '',\n      cityInput: ''\n    };\n  }\n\n  async getAPI() {\n    const options = {\n      method: 'GET',\n      url: 'http://localhost:3001/forecastAPI',\n      //Backend Pull\n      params: {\n        city: this.state.cityInput\n      }\n    };\n    await axios.request(options).then(response => {\n      for (let i = 0; i < 3; i++) {\n        console.log(response.data.forecast[i]); // setMaxTemp(response.data.forecast[0].day.maxtemp_c)\n        // setMinTemp(response.data.forecast[0].day.mintemp_c)\n        // setAvgTemp(response.data.forecast[0].day.avgtemp_c)\n        // setCondition(response.data.forecast[0].day.condition.text)\n        // setConditionIcon(response.data.forecast[0].day.condition.icon)\n        // setChanceOfRain(response.data.forecast[0].day.daily_chance_of_rain)\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.everyChange,\n          placeholder: \"Enter Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["C:/Web Development/WeatherApplication/client/weather-app/src/components/classTest.js"],"names":["React","useEffect","axios","ForecastTest","Component","constructor","props","handleSubmit","e","preventDefault","getAPI","everyChange","setState","cityInput","target","value","state","maxTemp","options","method","url","params","city","request","then","response","i","console","log","data","forecast","catch","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqCnBC,YArCmB,GAqCHC,CAAD,IAAO;AAElBA,MAAAA,CAAC,CAACC,cAAF;AAEA,WAAKC,MAAL;AAEA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KA9CkB;;AAAA,SAgDnBC,WAhDmB,GAgDJH,CAAD,IAAO;AAEjB;AACA,WAAKI,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEL,CAAC,CAACM,MAAF,CAASC;AAAtB,OAAd;AACH,KApDkB;;AAGf,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETJ,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIH;;AAGW,QAANH,MAAM,GAAG;AACX,UAAMQ,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,GAAG,EAAE,mCAFO;AAE8B;AAC1CC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE,KAAKN,KAAL,CAAWH;AAAnB;AAHI,KAAhB;AAMA,UAAMX,KAAK,CAACqB,OAAN,CAAcL,OAAd,EAAuBM,IAAvB,CAA6BC,QAAD,IAAc;AAC5C,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,QAAd,CAAuBJ,CAAvB,CAAZ,EADwB,CAGxB;AACA;AACA;AACA;AACA;AACA;AAEH;AAEJ,KAbK,EAaHK,KAbG,CAaIC,KAAD,IAAW;AAChBL,MAAAA,OAAO,CAACK,KAAR,CAAcA,KAAd;AACH,KAfK,CAAN;AAgBH;;AAqBDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACA;AAAM,QAAA,QAAQ,EAAE,KAAK1B,YAArB;AAAA,+BACI;AAAO,UAAA,QAAQ,EAAE,KAAKI,WAAtB;AAAmC,UAAA,WAAW,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,qBADJ;AAcH;;AAtEqD","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport axios from 'axios'\r\n\r\nexport default class ForecastTest extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            maxTemp: '',\r\n            cityInput: '',\r\n        }\r\n    }\r\n\r\n\r\n    async getAPI() {\r\n        const options = {\r\n            method: 'GET',\r\n            url: 'http://localhost:3001/forecastAPI', //Backend Pull\r\n            params: { city: this.state.cityInput },\r\n        }\r\n\r\n        await axios.request(options).then((response) => {\r\n            for (let i = 0; i < 3; i++) {\r\n                console.log(response.data.forecast[i]);\r\n                \r\n                // setMaxTemp(response.data.forecast[0].day.maxtemp_c)\r\n                // setMinTemp(response.data.forecast[0].day.mintemp_c)\r\n                // setAvgTemp(response.data.forecast[0].day.avgtemp_c)\r\n                // setCondition(response.data.forecast[0].day.condition.text)\r\n                // setConditionIcon(response.data.forecast[0].day.condition.icon)\r\n                // setChanceOfRain(response.data.forecast[0].day.daily_chance_of_rain)\r\n\r\n            }\r\n\r\n        }).catch((error) => {\r\n            console.error(error)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        this.getAPI();\r\n\r\n        return (\r\n            <div>Testing</div>\r\n        )\r\n    }\r\n\r\n    everyChange = (e) => {\r\n\r\n        //Setting cityInput\r\n        this.setState({ cityInput: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input onChange={this.everyChange} placeholder=\"Enter Location\"></input>\r\n            </form>\r\n\r\n\r\n\r\n    \r\n            </>\r\n        )\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}