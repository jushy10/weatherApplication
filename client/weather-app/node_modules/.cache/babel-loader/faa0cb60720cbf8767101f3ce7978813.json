{"ast":null,"code":"var _jsxFileName = \"D:\\\\School\\\\3230\\\\weatherApplication\\\\client\\\\weather-app\\\\src\\\\components\\\\HourlyForecast.jsx\";\nimport React, { Component } from \"react\";\nimport { Chart as ChartJS } from 'chart.js/auto';\nimport { Chart, Line } from 'react-chartjs-2';\nimport axios from \"axios\";\nimport { Card, Row, Col, Grid } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"../styles/forecast.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass HourlyForecast extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = e => {\n      this.tempData = [];\n      e.preventDefault();\n      this.forecastAPI();\n      this.handleInputChange(this.state.cityName);\n    };\n\n    this.everyChange = e => {\n      this.tempData = [];\n      this.setState({\n        cityName: e.target.value\n      });\n    };\n\n    this.state = {};\n    this.tempData = [];\n    this.chart = {\n      labels: ['12AM', '1AM', '2AM', '3AM', '4AM', '5AM', '6AM', '7AM', '8AM', '9AM', '10AM', '11AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM', '10PM', '11PM'],\n      datasets: [{\n        fill: false,\n        lineTension: 0.5,\n        backgroundColor: 'white',\n        borderColor: 'black',\n        label: \"Temperature in Â°C\",\n        data: this.tempData\n      }]\n    };\n  }\n\n  getTime(epoch) {\n    var myDate = new Date(epoch * 1000);\n\n    if (myDate.toLocaleString().split(',')[1].length == 11) {\n      return myDate.toLocaleString().split(',')[1].split(' ')[1].slice(0, 4) + myDate.toLocaleString().split(',')[1].split(' ')[2];\n    } else {\n      return myDate.toLocaleString().split(',')[1].split(' ')[1].slice(0, 5) + myDate.toLocaleString().split(',')[1].split(' ')[2];\n    }\n  }\n\n  handleInputChange(cityName) {\n    // this.props.changeCity(input)\n    window.localStorage.setItem('cityName', JSON.stringify(cityName));\n  }\n\n  async componentDidMount() {\n    if (this.props.cityInput !== null) {\n      // console.log(this.props.cityInput)\n      await this.setState({\n        cityName: this.props.cityInput\n      });\n      this.forecastAPI();\n    }\n  }\n\n  getDayOfWeek(date) {\n    const dayOfWeek = new Date(date).getDay();\n    return isNaN(dayOfWeek) ? null : ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'][dayOfWeek];\n  }\n\n  async forecastAPI() {\n    const options = {\n      method: 'GET',\n      url: 'http://localhost:3001/hourlyForecast',\n      //Backend Pull\n      params: {\n        city: this.state.cityName\n      }\n    };\n    let data = await axios.request(options).then(function (response) {\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n    this.setState({\n      jsonData: data.forecast.forecastday[0].hour.slice(0, 12)\n    });\n    this.setState({\n      jsonData2: data.forecast.forecastday[0].hour.slice(12, 24)\n    }); // await this.state.jsonData.map(data=> this.tempData.push(data.temp_c))\n    // await this.state.jsonData2.map(data=> this.tempData.push(data.temp_c))\n    // await console.log(this.tempData)\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"search\",\n          onSubmit: this.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.everyChange,\n            placeholder: \"Enter Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 4\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-example d-flex flex-row flex-nowrap overflow-auto\",\n            children: this.state.jsonData && this.state.jsonData.map(data => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bottomHour\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      className: \"weatherTime\",\n                      children: this.getTime(data.time_epoch)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 8\n                    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: data.condition.icon\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 5\n                    }, this), data.temp_c, \"\\xB0C\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 5\n                  }, this), this.tempData.push(data.temp_c)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 5\n                }, this)\n              }, void 0, false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"card-example d-flex flex-row flex-nowrap overflow-auto\",\n            children: this.state.jsonData2 && this.state.jsonData2.map(data2 => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bottomHour\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                        className: \"weatherTime\",\n                        children: this.getTime(data2.time_epoch)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 8\n                      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: data2.condition.icon\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 5\n                      }, this), data2.temp_c, \"\\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 5\n                    }, this), this.tempData.push(data2.temp_c)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 5\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 5\n                }, this)\n              }, void 0, false);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chartBox\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: \"relative\",\n                margin: \"auto\",\n                width: \"1250px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Line, {\n                data: this.chart,\n                options: ({\n                  title: {\n                    text: 'Daily Temperature',\n                    display: true\n                  }\n                }, {\n                  scales: {\n                    y: {\n                      ticks: {\n                        color: \"white\",\n                        font: {\n                          size: 18\n                        },\n                        stepSize: 1,\n                        beginAtZero: true\n                      }\n                    },\n                    x: {\n                      ticks: {\n                        color: \"white\",\n                        font: {\n                          size: 15\n                        },\n                        stepSize: 1\n                      }\n                    }\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 3\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 3\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default HourlyForecast;","map":{"version":3,"sources":["D:/School/3230/weatherApplication/client/weather-app/src/components/HourlyForecast.jsx"],"names":["React","Component","Chart","ChartJS","Line","axios","Card","Row","Col","Grid","HourlyForecast","constructor","handleSubmit","e","tempData","preventDefault","forecastAPI","handleInputChange","state","cityName","everyChange","setState","target","value","chart","labels","datasets","fill","lineTension","backgroundColor","borderColor","label","data","getTime","epoch","myDate","Date","toLocaleString","split","length","slice","window","localStorage","setItem","JSON","stringify","componentDidMount","props","cityInput","getDayOfWeek","date","dayOfWeek","getDay","isNaN","options","method","url","params","city","request","then","response","catch","error","console","log","jsonData","forecast","forecastday","hour","jsonData2","render","map","time_epoch","condition","icon","temp_c","push","data2","position","margin","width","title","text","display","scales","y","ticks","color","font","size","stepSize","beginAtZero","x"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Chart as ChartJS } from 'chart.js/auto'\nimport { Chart, Line }            from 'react-chartjs-2'\nimport axios from \"axios\";\n\nimport { Card, Row, Col, Grid } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport \"../styles/forecast.css\"\n\nclass HourlyForecast extends Component {\nconstructor() {\n\tsuper();\n\tthis.state = {\n\t};\n\n\tthis.tempData = [];\n\n\tthis.chart = {\n\t\tlabels: ['12AM', '1AM', '2AM', '3AM', '4AM', '5AM', '6AM', '7AM', '8AM', '9AM', '10AM', '11AM'\n\t, '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM', '10PM', '11PM'],\n\t\tdatasets: [\n\t\t{\n\t\t\tfill:false,\n\t\t\tlineTension: 0.5,\n\t\t\tbackgroundColor: 'white',\n      \t\tborderColor: 'black',\n\t\t\tlabel: \"Temperature in Â°C\",\n\t\t\tdata: this.tempData\n\t\t}]\n\t}\n}\n\ngetTime(epoch){\n\tvar myDate = new Date(epoch*1000);\n\tif (myDate.toLocaleString().split(',')[1].length == 11){\n\t\treturn(myDate.toLocaleString().split(',')[1].split(' ')[1].slice(0, 4)) + myDate.toLocaleString().split(',')[1].split(' ')[2];\t\n\t}\n\telse{\n\t\treturn(myDate.toLocaleString().split(',')[1].split(' ')[1].slice(0, 5)) + myDate.toLocaleString().split(',')[1].split(' ')[2];\t\n\t}\n}\n\nhandleInputChange(cityName) {\n    // this.props.changeCity(input)\n\twindow.localStorage.setItem('cityName', JSON.stringify(cityName))\n}\n\n\nasync componentDidMount() {\n\tif (this.props.cityInput !== null) {\n\t\t// console.log(this.props.cityInput)\n\t\tawait this.setState({ cityName: this.props.cityInput });\n\t\tthis.forecastAPI();\n\t}\n\n}\n\ngetDayOfWeek(date) {\n    const dayOfWeek = new Date(date).getDay();\n    return isNaN(dayOfWeek) ? null : \n      ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'][dayOfWeek];\n}\n\nasync forecastAPI() {\n\tconst options = {\n\t\tmethod: 'GET',\n\t\turl: 'http://localhost:3001/hourlyForecast', //Backend Pull\n\t\tparams: { city: this.state.cityName },\n\t}\n\n\tlet data = await axios.request(options)\n\t.then(function (response) {\n\t\treturn response.data;\n\t})\n\t.catch(function (error) {\n\t\tconsole.log(error);\n\t});\n\tthis.setState({ jsonData: data.forecast.forecastday[0].hour.slice(0, 12) })\n\tthis.setState({ jsonData2: data.forecast.forecastday[0].hour.slice(12, 24) })\n\t\n\t// await this.state.jsonData.map(data=> this.tempData.push(data.temp_c))\n\t// await this.state.jsonData2.map(data=> this.tempData.push(data.temp_c))\n\t// await console.log(this.tempData)\n}\n\n\nhandleSubmit = (e) => {\n\tthis.tempData = [];\n\te.preventDefault();\n\tthis.forecastAPI();\n\tthis.handleInputChange(this.state.cityName);\n\n}\n\neveryChange = (e) => {\n\tthis.tempData = []\n\tthis.setState({ cityName: e.target.value });\n\t\n}\n\n\n\n\nrender() {\n\treturn (\n\t\t<div className='app'>\n\t\t<>\n\t\t<form className='search' onSubmit={this.handleSubmit}>\n\t\t\t<input onChange={this.everyChange} placeholder=\"Enter Location\"></input>\n\t\t</form>\n\n\t\t<div>\n\t\t<br></br><br></br>\n\t\t\n\t\t<Row className=\"card-example d-flex flex-row flex-nowrap overflow-auto\">\n\t\t{this.state.jsonData && this.state.jsonData.map(data=> {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\n\t\t\t\t<div className='bottomHour'>\n\t\t\t\t<p><b className=\"weatherTime\">{this.getTime(data.time_epoch)}</b>\n\t\t\t\n\t\t\t\t<img src={data.condition.icon}></img>\n\t\t\t\t{data.temp_c}Â°C</p>\t\n\t\t\t\t{this.tempData.push(data.temp_c)}\n\t\t\t\n\t\t\t\t</div>\t\t\n\t\t\t\t\n\t\t\t\t</>\n\t\t\t\t\n\t\t\t);\n\t\t})}\n\t\t</Row>\n\t\t\n\t\t<Row className=\"card-example d-flex flex-row flex-nowrap overflow-auto\">\n\t\t{this.state.jsonData2 && this.state.jsonData2.map(data2=> {\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t<Col>\n\t\t\t\t<div className='bottomHour'>\n\t\t\t\n\t\t\t\t<p><b className=\"weatherTime\">{this.getTime(data2.time_epoch)}</b>\n\t\t\t\t\t\t\t\n\t\t\t\t<img src={data2.condition.icon}></img>\n\t\t\t\t{data2.temp_c}Â°C</p>\n\t\t\t\t{this.tempData.push(data2.temp_c)}\n\t\t\t\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t</Col>\n\t\t\t\t\n\t\t\t\t</>\n\t\t\t\t\n\t\t\t);\n\t\t})}\n\t\t</Row>\n\t\t<br></br><br></br>\n\t\t<div className='chartBox'>\n\t\t<div style={{ position: \"relative\", margin: \"auto\", width: \"1250px\" }}>\n\t\t<Line data={this.chart} \n\t\toptions={\n\t\t\t{title:{ text:'Daily Temperature', display:true}},\n\t\t\t{scales: {\n\t\t\t\ty: {  \n\t\t\t\t  ticks: {\n\t\t\t\t\tcolor: \"white\", \n\t\t\t\t\tfont: {\n\t\t\t\t\t  size: 18, \n\t\t\t\t\t},\n\t\t\t\t\tstepSize: 1,\n\t\t\t\t\tbeginAtZero: true\n\t\t\t\t  }\n\t\t\t\t},\n\t\t\t\tx: {  \n\t\t\t\t\tticks: {\n\t\t\t\t\t  color: \"white\", \n\t\t\t\t\t  font: {\n\t\t\t\t\t\tsize: 15, \n\t\t\t\t\t  },\n\t\t\t\t\t  stepSize: 1,\n\t\t\t\t\t}\n\t\t\t\t  }\n\t\t\t}\n\t\t\t}}\n\t\t\t />\n\t\t</div>\n\t\t</div>\n\t\t</div>\n\t\t\n\n\t</></div>\n\t);\n}\n}\n\n\nexport default HourlyForecast;"]},"metadata":{},"sourceType":"module"}