{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Development\\\\WeatherApplication\\\\client\\\\weather-app\\\\src\\\\components\\\\testAPI.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Gettododata(props) {\n  _s();\n\n  const [data, setData] = useState({\n    todos: []\n  });\n  useEffect(async () => {\n    const data = await axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\").then(function (response) {\n      return response;\n    }).catch(function (error) {\n      console.log(error);\n    });\n    setData(data.data);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.todos.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Gettododata, \"LI/8IQlAp9aKCZ9xz7eCn2ScTZE=\");\n\n_c = Gettododata;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gettododata\");","map":{"version":3,"sources":["C:/Web Development/WeatherApplication/client/weather-app/src/components/testAPI.jsx"],"names":["React","useState","useEffect","axios","Gettododata","props","data","setData","todos","get","then","response","catch","error","console","log","map","item","title","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAEzC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;AAAEO,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAhC;AAEAN,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMI,IAAI,GAAG,MAAMH,KAAK,CACrBM,GADgB,CACZ,sDADY,EAEhBC,IAFgB,CAEX,UAASC,QAAT,EAAmB;AACvB,aAAOA,QAAP;AACD,KAJgB,EAKhBC,KALgB,CAKV,UAASC,KAAT,EAAgB;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAPgB,CAAnB;AASAN,IAAAA,OAAO,CAACD,IAAI,CAACA,IAAN,CAAP;AACD,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACE;AAAA,cACGA,IAAI,CAACE,KAAL,CAAWQ,GAAX,CAAeC,IAAI,iBAClB;AAAA,6BACE;AAAA,kBAAIA,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA;AADF,OAAUD,IAAI,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA1BuBf,W;;KAAAA,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Gettododata(props) {\r\n\r\n  const [data, setData] = useState({ todos: [] });\r\n\r\n  useEffect(async () => {\r\n    const data = await axios\r\n      .get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\r\n      .then(function(response) {\r\n        return response;\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n\r\n    setData(data.data);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {data.todos.map(item => (\r\n        <div key={item.id}>\r\n          <p>{item.title}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}