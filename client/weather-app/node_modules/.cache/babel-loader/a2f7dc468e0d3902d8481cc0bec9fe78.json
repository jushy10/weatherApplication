{"ast":null,"code":"var _jsxFileName = \"C:\\\\Web Development\\\\WeatherApplication\\\\client\\\\weather-app\\\\src\\\\components\\\\classTest.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ForecastTest extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.getAPI();\n    };\n\n    this.everyChange = e => {\n      //Setting cityInput\n      this.setState({\n        cityInput: e.target.value\n      });\n    };\n\n    this.state = {\n      cityInput: ''\n    };\n    this.getAPI = this.getAPI.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAPI();\n  }\n\n  async getAPI() {\n    const options = {\n      method: 'GET',\n      url: 'http://localhost:3001/forecastAPI',\n      //Backend Pull\n      // params: { city: this.state.cityInput },\n      params: {\n        city: \"Toronto\"\n      }\n    };\n    let data = await axios.request(options).then(response => {\n      return response; // for (let i = 0; i < 3; i++) {\n      //     console.log(response.data.forecast[i]);\n      //     // setMaxTemp(response.data.forecast[0].day.maxtemp_c)\n      //     // setMinTemp(response.data.forecast[0].day.mintemp_c)\n      //     // setAvgTemp(response.data.forecast[0].day.avgtemp_c)\n      //     // setCondition(response.data.forecast[0].day.condition.text)\n      //     // setConditionIcon(response.data.forecast[0].day.condition.icon)\n      //     // setChanceOfRain(response.data.forecast[0].day.daily_chance_of_rain)\n      // }\n    }).catch(error => {\n      console.error(error);\n    });\n    this.setState({\n      todos: data.data\n    });\n  }\n\n  render() {\n    const {\n      todos\n    } = this.state;\n    return (\n      /*#__PURE__*/\n      // <>\n      // <form onSubmit={this.handleSubmit}>\n      //     <input onChange={this.everyChange} placeholder=\"Enter Location\"></input>\n      // </form>\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Using componentDidMount for initial data render\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), todos]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this) // </>\n\n    );\n  }\n\n}","map":{"version":3,"sources":["C:/Web Development/WeatherApplication/client/weather-app/src/components/classTest.js"],"names":["React","axios","ForecastTest","Component","constructor","handleSubmit","e","preventDefault","getAPI","everyChange","setState","cityInput","target","value","state","bind","componentDidMount","options","method","url","params","city","data","request","then","response","catch","error","console","todos","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACtDC,EAAAA,WAAW,GAAG;AACV;;AADU,SA8CdC,YA9Cc,GA8CEC,CAAD,IAAO;AAElBA,MAAAA,CAAC,CAACC,cAAF;AAEA,WAAKC,MAAL;AACH,KAnDa;;AAAA,SAqDdC,WArDc,GAqDCH,CAAD,IAAO;AAEjB;AACA,WAAKI,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEL,CAAC,CAACM,MAAF,CAASC;AAAtB,OAAd;AACH,KAzDa;;AAGV,SAAKC,KAAL,GAAa;AACTH,MAAAA,SAAS,EAAE;AADF,KAAb;AAGA,SAAKH,MAAL,GAAc,KAAKA,MAAL,CAAYO,IAAZ,CAAiB,IAAjB,CAAd;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,MAAL;AACH;;AAGW,QAANA,MAAM,GAAG;AACX,UAAMS,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,GAAG,EAAE,mCAFO;AAE8B;AAC1C;AACAC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAJI,KAAhB;AAOA,QAAIC,IAAI,GAAG,MAAMrB,KAAK,CAACsB,OAAN,CAAcN,OAAd,EAChBO,IADgB,CACVC,QAAD,IAAc;AAChB,aAAOA,QAAP,CADgB,CAEhB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGH,KAhBgB,EAgBdC,KAhBc,CAgBPC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,KAlBgB,CAAjB;AAmBA,SAAKjB,QAAL,CAAc;AAAEmB,MAAAA,KAAK,EAAEP,IAAI,CAACA;AAAd,KAAd;AACH;;AAiBDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAED,MAAAA;AAAF,QAAY,KAAKf,KAAvB;AAEA;AAAA;AACI;AACA;AACA;AACA;AAEA;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGKe,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,CAYI;;AAZJ;AAiBH;;AAhFqD","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios'\r\n\r\nexport default class ForecastTest extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            cityInput: '',\r\n        };\r\n        this.getAPI = this.getAPI.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAPI();\r\n    }\r\n\r\n\r\n    async getAPI() {\r\n        const options = {\r\n            method: 'GET',\r\n            url: 'http://localhost:3001/forecastAPI', //Backend Pull\r\n            // params: { city: this.state.cityInput },\r\n            params: { city: \"Toronto\" },\r\n        }\r\n\r\n        let data = await axios.request(options)\r\n        .then((response) => {\r\n            return response;\r\n            // for (let i = 0; i < 3; i++) {\r\n            //     console.log(response.data.forecast[i]);\r\n                \r\n            //     // setMaxTemp(response.data.forecast[0].day.maxtemp_c)\r\n            //     // setMinTemp(response.data.forecast[0].day.mintemp_c)\r\n            //     // setAvgTemp(response.data.forecast[0].day.avgtemp_c)\r\n            //     // setCondition(response.data.forecast[0].day.condition.text)\r\n            //     // setConditionIcon(response.data.forecast[0].day.condition.icon)\r\n            //     // setChanceOfRain(response.data.forecast[0].day.daily_chance_of_rain)\r\n\r\n            // }\r\n            \r\n\r\n        }).catch((error) => {\r\n            console.error(error)\r\n        })\r\n        this.setState({ todos: data.data });\r\n    }\r\n\r\n\r\n\r\n    handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        this.getAPI();\r\n    }\r\n\r\n    everyChange = (e) => {\r\n\r\n        //Setting cityInput\r\n        this.setState({ cityInput: e.target.value })\r\n    }\r\n\r\n    render() {\r\n        const { todos } = this.state;\r\n\r\n        return (\r\n            // <>\r\n            // <form onSubmit={this.handleSubmit}>\r\n            //     <input onChange={this.everyChange} placeholder=\"Enter Location\"></input>\r\n            // </form>\r\n\r\n            <div>\r\n                <h3>Using componentDidMount for initial data render</h3>\r\n                <hr />\r\n                {todos}\r\n            </div>\r\n\r\n            // </>\r\n        )\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}